name: Release Daily Version if necessary
on:
  schedule:
    - cron: '59 23 * * *'
  workflow_dispatch:

jobs:
  tag:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: fregante/daily-version-action@v1
        name: Create tag if necessary
        id: daily-version
    outputs:
      created: ${{ steps.daily-version.outputs.created }}
      version: ${{ steps.daily-version.outputs.version }}

  release:
    needs: tag
    if: needs.tag.outputs.created
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: fregante/release-with-changelog@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          title: 'NextGenUI {tag}'
          template: |
            ### ⚠️ This release may not be stable, proceed with caution ⚠️

            This is an auto-generated release with the latest changes. It may be incomplete, unstable or break other things.

            ### Changes

            {commits}

            {range}

  build:
    needs:
      - tag
      - release
    if: needs.tag.outputs.created
    name: 🔨 Build distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: 🏗 Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8
      - name: 🏗 Set up Node 14
        uses: actions/setup-node@v2
        with:
          node-version: '14'
      - name: 🏗 Install Python dependencies
        run: python -m pip install -U wheel setuptools octoprint --user
      - name: 🏗 Install NodeJS dependencies
        run: |
          cd nextgenui
          npm install -g npm@7
          npm install
      - name: 🔨 Build frontend code in release mode
        run: |
          cd nextgenui
          npm run release
      - name: 🔨 Build plugin package
        run: |
          python setup.py sdist --formats=zip
      - name: 🚚 rename to sdist.zip
        run: |
          mv dist/OctoPrint-NextGenUI-*.zip dist/sdist.zip
      - name: ⬆ Upload build result
        uses: actions/upload-artifact@v1
        with:
          name: dist
          path: dist

  upload-asset:
    name: 📦 Upload asset to release
    runs-on: ubuntu-latest
    needs:
      - tag
      - release
      - build
    if: needs.tag.outputs.created
    steps:
      - name: ⬇ Download build result
        uses: actions/download-artifact@v1
        with:
          name: dist
          path: dist
      - name: 🚚 Rename to release.zip
        run: |
          cp dist/sdist.zip release.zip
      - name: 🥅 Catch release ID
        id: get_release
        uses: cp2004/get-release@v1.3.0
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          tag: ${{ needs.tag.outputs.version }}
      - name: 📦 Attach release artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release.outputs.upload_url }}
          asset_path: release.zip
          asset_name: release.zip
          asset_content_type: application/zip
